# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Mod16 = [Super] or [losedows] key
set $mod Mod4


# load
exec bash /home/tehftw.local/bin/teh-xinitrc.bash


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
set $font_name pango:monospace
set $font_size_bar 12
set $font_size_win 10
set $font_bar $font_name $font_size_bar
set $font_win $font_name $font_size_win

font $font_name $font_size_win

## disable titlebar and set border
#new_window pixel 4

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.


####	default settings
####	modeless bindings
# focus
focus_follows_mouse no
focus_wrapping no
focus_on_window_activation urgent

show_marks yes
default_floating_border none

##  move focused window
# hjkl
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# cursor keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

## rofi launchers
bindsym $mod+r exec --no-startup-id rofi -show run
bindsym $mod+d exec --no-startup-id rofi -show drun -show-icons

## press Print to make a screenshot into ~/Pictures/screenshots/
bindsym Print exec scrot '/home/tehftw/Pictures/screenshots/scrot_%s.png'

## lock screen
bindsym $mod+Ctrl+l exec amixer -D pulse sset Master mute ; exec i3lock -c 100000 -i ~/Pictures/logos/locked-icon.png

## kill window
bindsym $mod+Shift+q kill



#### --- switching focus ---
bindsym $mod+s exec rofi -show window
## change focus
# hjkl
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# arrows
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# between tiling / floating
bindsym $mod+space focus mode_toggle
# focus the parent container
bindsym $mod+Shift+a focus parent
# focus the child container
bindsym $mod+a focus child


##  workspace
workspace_layout tabbed
# switch between the current and the previously focused one
bindsym $mod+Tab workspace back_and_forth
# switch to adjacent workspace
bindsym $mod+p workspace next
bindsym $mod+o workspace prev
# workspace declaration
set $ws_0 workspace 0:0
set $ws_1 workspace 1:1
set $ws_2 workspace 2:2
set $ws_3 workspace 3:3
set $ws_4 workspace 4:4
set $ws_5 workspace 5:z
set $ws_6 workspace 6:x
set $ws_7 workspace 7:c
set $ws_8 workspace 8:v
# switch to workspace
bindsym $mod+0 $ws_0
bindsym $mod+1 $ws_1
bindsym $mod+2 $ws_2
bindsym $mod+3 $ws_3
bindsym $mod+4 $ws_4
bindsym $mod+z $ws_5
bindsym $mod+x $ws_6
bindsym $mod+c $ws_7
bindsym $mod+v $ws_8
# move focused container to workspace
bindsym $mod+Shift+0 move container to $ws_0
bindsym $mod+Shift+1 move container to $ws_1
bindsym $mod+Shift+2 move container to $ws_2
bindsym $mod+Shift+3 move container to $ws_3
bindsym $mod+Shift+4 move container to $ws_4
bindsym $mod+Shift+z move container to $ws_5
bindsym $mod+Shift+x move container to $ws_6
bindsym $mod+Shift+c move container to $ws_7
bindsym $mod+Shift+v move container to $ws_8


##  backlight: F11/F12
bindsym XF86MonBrightnessUp   exec --no-startup-id xbacklight -inc 2 -time 0
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 2 -time 0
bindsym $mod+F11 exec --no-startup-id xbacklight -dec 8 -time 0
bindsym $mod+F12 exec --no-startup-id xbacklight -inc 8 -time 0
bindsym $mod+Shift+F11 exec --no-startup-id xbacklight -dec 1 -time 0
bindsym $mod+Shift+F12 exec --no-startup-id xbacklight -inc 1 -time 0


##  volume: F2/F3
bindsym XF86AudioMute exec --no-startup-id amixer -D pulse sset Master mute
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master unmute 2%+
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master unmute 2%-
bindsym $mod+F1 exec --no-startup-id amixer -D pulse sset Master mute
bindsym $mod+F2 exec --no-startup-id amixer -D pulse sset Master unmute 4%-
bindsym $mod+F3 exec --no-startup-id amixer -D pulse sset Master unmute 4%+
bindsym $mod+Shift+F2 exec --no-startup-id amixer -D pulse sset Master unmute 1%-
bindsym $mod+Shift+F3 exec --no-startup-id amixer -D pulse sset Master unmute 1%+


#### colors
set  $color.k   "#000000"
set  $color.r   "#400000"
set  $color.g   "#004000"
set  $color.y   "#404000"
set  $color.b   "#000040"
set  $color.c   "#004040"
set  $color.m   "#400040"
set  $color.w   "#808080"

set  $color.lk  "#404040"
set  $color.lr  "#800000"
set  $color.lg  "#008000"
set  $color.ly  "#808000"
set  $color.lb  "#000080"
set  $color.lc  "#008080"
set  $color.lm  "#800080"
set  $color.lw  "#c0c0c0"


set $color.bg  "#201010"
set $color.fg  "#ffffff"


set $tcol.dark.bg "$color.k"
set $tcol.dark.fg "$color.w"

set $color.bar.fg "#c0d0c0"
set $color.bar.bg "#201010"




# class                 border   backgr.  text     indicator  child_border
client.focused          #208020  #204020  #c0c0ff  #e0e0e0    #206020
client.focused_inactive #404040  #608060  #c0c0ff  #404060    #104010
client.unfocused        #333333  #081808  #8080c0  #292d2e    #003000
client.urgent           #2f343a  #900000  #e0e0e0  #900000    #800000
client.placeholder      #000000  #0c0c0c  #e0e0e0  #000000    #101010
client.background       #000020

##	special programs
for_window [title="GIMP Startup"] move $ws_5
for_window [class="Gimp"] move $ws_5


##	scratchpad	dropdown
# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the first scratchpad window
bindsym $mod+minus scratchpad show
# settings for dropdown
for_window [instance="^dropdown_*"] floating enable
for_window [instance="vim scratch"] floating enable
for_window [instance="vim scratch"] resize set width  1200 height 800
bindsym $mod+Shift+s [instance="vim scratch"] scratchpad show


#### --- terminal ---
set $terminal urxvt
bindsym $mod+Return exec urxvt

##  mode terminal
set $mode_terminal mode  terminal
bindsym $mod+t  mode "$mode_terminal"
mode "$mode_terminal" {
	bindsym Return mode "default"
	bindsym Escape mode "default"
	##  spawn colored terminal
	bindsym 1 exec st -s 0x0
	bindsym 2 exec st -s 0x1
	##  spawn terminal
	bindsym t exec tehst.sh
	bindsym s exec st
	##  pick default color
	bindsym p exec tehst.sh -p
	##  pick instance color
	bindsym c exec st-colorchoice.sh
	##  tmux
	bindsym m exec st -e tmux
	bindsym a exec st -e tmux attach
	# dropdowns
	bindsym d exec st -n dropdown_
	# spawn scratch
	bindsym Shift+s exec st -n 'vim scratch' -e nvim scratch.md
	# echo term, so random XD
	bindsym e exec notify-send "term check..." "$(echo-if-is-term.sh)"
}




####  mode_admin
set  $mode_admin i3admin  [l]lock  [E]exit  [r]restart  [c]conf-reload
bindsym $mod+i mode $mode_admin
mode "$mode_admin" {
	## back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"

	## lock screen
	bindsym l exec amixer -D pulse sset Master mute ; exec i3lock -c 000000 -i ~/Pictures/logos/locked-icon.png

	## reload the configuration file
	bindsym c reload
	## restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
	bindsym r restart
	bindsym Shift+r reload restart

	# exit i3 (logs you out of your X session)
	bindsym e exec dmenu-script-simpleprompt 'Do you really want to exit i3? This will end your X session.' 'i3-msg exit'
}




####  mode_winmanip
set  $mode_winmanip  mode winmanip container type: [stbev]
set  $mode_winmanip_resize  mode winmanip_resize
bindsym $mod+w mode "$mode_winmanip"
mode "$mode_winmanip" {
	##  back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"

	##  mode resize
	bindsym r mode "$mode_winmanip_resize"

	##  kill
	bindsym q       kill
	bindsym $mod+q  kill
	bindsym Shift+q kill

	##  enter fullscreen mode for the focused container
	bindsym f fullscreen toggle

	##  toggle tiling / floating
	bindsym space floating toggle

	##  container_type
	bindsym s layout tabbed
	bindsym t layout stacked
	bindsym e layout toggle split
	bindsym b splith
	bindsym v splitv

	##  focus
	bindsym h focus left
	bindsym j focus down
	bindsym k focus up
	bindsym l focus right
	bindsym Left  focus left
	bindsym Down  focus down
	bindsym Up    focus up
	bindsym Right focus right

	## move
	bindsym Shift+h     move left
	bindsym Shift+j     move down
	bindsym Shift+k     move up
	bindsym Shift+l     move right
	bindsym Shift+Left  move left
	bindsym Shift+Down  move down
	bindsym Shift+Up    move up
	bindsym Shift+Right move right

	# move between workspaces
	bindsym 0 $ws_0
	bindsym 1 $ws_1
	bindsym 2 $ws_2
	bindsym 3 $ws_3
	bindsym 4 $ws_4
	bindsym z $ws_5
	bindsym x $ws_6
	bindsym c $ws_7
	bindsym v $ws_8
	# throw into a different workspace
	bindsym Shift+0 move container to $ws_0
	bindsym Shift+1 move container to $ws_1
	bindsym Shift+2 move container to $ws_2
	bindsym Shift+3 move container to $ws_3
	bindsym Shift+4 move container to $ws_4
	bindsym Shift+z move container to $ws_5
	bindsym Shift+x move container to $ws_6
	bindsym Shift+c move container to $ws_7
	bindsym Shift+v move container to $ws_8
}


mode "$mode_winmanip_resize" {
	## back to normal: Enter or Escape
	bindsym Return mode "$mode_winmanip"
	bindsym Escape mode "default"
	
	## resize
	bindsym h resize shrink width  64 px
	bindsym l resize grow   width  64 px
	bindsym j resize grow   height 64 px
	bindsym k resize shrink height 64 px
	bindsym Shift+h resize shrink width  16 px
	bindsym Shift+l resize grow   width  16 px
	bindsym Shift+j resize grow   height 16 px
	bindsym Shift+k resize shrink height 16 px
}




####  bar
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	id bar-top
	font $font_name $font_size_bar
	status_command i3blocks
	tray_output primary
	tray_padding 0
	position top
	colors {
		background $color.bar.bg
		statusline $color.bar.fg
		separator #666666
		# class            border    bg       fg   indicator child_border
		focused_workspace  $color.g #204010" $color.fg
		active_workspace   $color.g #5f676a" $color.fg
		inactive_workspace $color.g #202020" #888888
		urgent_workspace   $color.g #602020" $color.fg
		binding_mode       $color.g #402020" $color.fg
	}
}
bar {
	id bar-bot
	font $font_name $font_size_bar
	status_command i3status
	position bottom
	binding_mode_indicator no
	workspace_buttons no
	tray_output none
	colors {
		background $color.bar.bg
		statusline $color.bar.fg
	}
}




# mode mpd mode_mpd mpd mpc
set $mode_mpd mode  mpd
bindsym $mod+m mode "$mode_mpd"
mode "$mode_mpd" {
	bindsym Return mode "default"
	bindsym Escape mode "default"

	bindsym p exec mpc toggle
	bindsym s exec mpc stop

	# move between tracks
	bindsym comma  exec mpc prev
	bindsym Shift+comma exec mpc prev
	bindsym period exec mpc next
	bindsym Shift+period exec mpc prev

	# volume
	bindsym XF86AudioMute exec --no-startup-id amixer -D pulse sset Master mute
	bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master unmute 2%+
	bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master unmute 2%-
	bindsym F1 exec --no-startup-id amixer -D pulse sset Master mute
	bindsym F2 exec --no-startup-id amixer -D pulse sset Master unmute 4%-
	bindsym F3 exec --no-startup-id amixer -D pulse sset Master unmute 4%+
	bindsym Shift+F2 exec --no-startup-id amixer -D pulse sset Master unmute 1%-
	bindsym Shift+F3 exec --no-startup-id amixer -D pulse sset Master unmute 1%+
	bindsym minus exec --no-startup-id amixer -D pulse sset Master unmute 4%-
	bindsym underscore exec --no-startup-id amixer -D pulse sset Master unmute 4%-
	bindsym plus exec --no-startup-id amixer -D pulse sset Master unmute 4%+
	bindsym equal exec --no-startup-id amixer -D pulse sset Master unmute 4%+
}




# gaps
set $gaps_default_inner 32
set $gaps_default_horizontal 96

set $gaps_step 32
set $gaps_step_4 128


gaps inner      $gaps_default_inner
gaps horizontal $gaps_default_horizontal


set $mode_gaps         mode  gaps [oibvtrdlp] [o]uter, [i]nner, -[b]horz, |[v]ert, [t]op, [r]ight, [d]own, [l]eft; no-gaps: Shift+gapkey
set $mode_gaps_outer   mode  gaps [o]outer  +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner   mode  gaps [i]inner  +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bhorz   mode  gaps [b]-hor   +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti   mode  gaps [v]|vert  +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top     mode  gaps [t]top    +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right   mode  gaps [r]rite   +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_down    mode  gaps [d]down   +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left    mode  gaps [l]left   +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_presets mode  gaps presets [df]  [d]default  [f]fill  [t]tall


bindsym $mod+g mode "$mode_gaps"
mode "$mode_gaps" {
	bindsym Return mode "default"
	bindsym Escape mode "default"

	bindsym o  mode "$mode_gaps_outer"
	bindsym i  mode "$mode_gaps_inner"
	bindsym b  mode "$mode_gaps_bhorz"
	bindsym v  mode "$mode_gaps_verti"
	bindsym t  mode "$mode_gaps_top"
	bindsym r  mode "$mode_gaps_right"
	bindsym d  mode "$mode_gaps_down"
	bindsym l  mode "$mode_gaps_left"
	bindsym p  mode "$mode_gaps_presets"

	bindsym Shift+o gaps outer current set 0
	bindsym Shift+i gaps inner current set 0
	bindsym Shift+b gaps horizontal current set 0
	bindsym Shift+v gaps vertical current set 0
	bindsym Shift+t gaps top current set 0
	bindsym Shift+r gaps right current set 0
	bindsym Shift+d gaps down current set 0
	bindsym Shift+l gaps left current set 0
}


mode "$mode_gaps_presets" {
	bindsym Return mode "$mode_gaps"
	bindsym Escape mode "default"

	bindsym d  \
		gaps inner current set $gaps_default_inner ; \
		gaps outer current set $gaps_default_outer

	bindsym f  \
		gaps inner current set 0 ; \
		gaps outer current set 0

	bindsym t  \
		gaps inner      current set 0 ; \
		gaps vertical   current set 0 ; \
		gaps horizontal current set $gaps_step_4
}


mode "$mode_gaps_outer" {
	bindsym Return mode "$mode_gaps"
	bindsym Escape mode "default"

	bindsym plus  gaps outer current plus $gaps_step
	bindsym minus gaps outer current minus $gaps_step
	bindsym 0     gaps outer current set 0

	bindsym Shift+plus  gaps outer all plus $gaps_step
	bindsym Shift+minus gaps outer all minus $gaps_step
	bindsym Shift+0     gaps outer all set 0
}


mode "$mode_gaps_inner" {
	bindsym Return mode "$mode_gaps"
	bindsym Escape mode "default"

	bindsym plus  gaps inner current plus $gaps_step
	bindsym minus gaps inner current minus $gaps_step
	bindsym 0     gaps inner current set 0

	bindsym Shift+plus  gaps inner all plus $gaps_step
	bindsym Shift+minus gaps inner all minus $gaps_step
	bindsym Shift+0     gaps inner all set 0
}


mode "$mode_gaps_bhorz" {
	bindsym Return mode "$mode_gaps"
	bindsym Escape mode "default"

	bindsym plus  gaps horizontal current plus $gaps_step
	bindsym minus gaps horizontal current minus $gaps_step
	bindsym 0     gaps horizontal current set 0

	bindsym Shift+plus  gaps horizontal all plus $gaps_step
	bindsym Shift+minus gaps horizontal all minus $gaps_step
	bindsym Shift+0     gaps horizontal all set 0
}


mode "$mode_gaps_verti" {
	bindsym Return mode "$mode_gaps"
	bindsym Escape mode "default"

	bindsym plus  gaps vertical current plus $gaps_step
	bindsym minus gaps vertical current minus $gaps_step
	bindsym 0     gaps vertical current set 0

	bindsym Shift+plus  gaps vertical all plus $gaps_step
	bindsym Shift+minus gaps vertical all minus $gaps_step
	bindsym Shift+0     gaps vertical all set 0
}


mode "$mode_gaps_top" {
	bindsym Return mode "$mode_gaps"
	bindsym Escape mode "default"

	bindsym plus  gaps top current plus $gaps_step
	bindsym minus gaps top current minus $gaps_step
	bindsym 0     gaps top current set 0

	bindsym Shift+plus  gaps top all plus $gaps_step
	bindsym Shift+minus gaps top all minus $gaps_step
	bindsym Shift+0     gaps top all set 0
}


mode "$mode_gaps_right" {
	bindsym Return mode "$mode_gaps"
	bindsym Escape mode "default"

	bindsym plus  gaps right current plus $gaps_step
	bindsym minus gaps right current minus $gaps_step
	bindsym 0     gaps right current set 0

	bindsym Shift+plus  gaps right all plus $gaps_step
	bindsym Shift+minus gaps right all minus $gaps_step
	bindsym Shift+0     gaps right all set 0
}


mode "$mode_gaps_down" {
	bindsym Return mode "$mode_gaps"
	bindsym Escape mode "default"

	bindsym plus  gaps bottom current plus $gaps_step
	bindsym minus gaps bottom current minus $gaps_step
	bindsym 0     gaps bottom current set 0

	bindsym Shift+plus  gaps bottom all plus $gaps_step
	bindsym Shift+minus gaps bottom all minus $gaps_step
	bindsym Shift+0     gaps bottom all set 0
}


mode "$mode_gaps_left" {
	bindsym Return mode "$mode_gaps"
	bindsym Escape mode "default"

	bindsym plus  gaps left current plus $gaps_step
	bindsym minus gaps left current minus $gaps_step
	bindsym 0     gaps left current set 0

	bindsym Shift+plus  gaps bottom all plus $gaps_step
	bindsym Shift+minus gaps left all minus $gaps_step
	bindsym Shift+0     gaps left all set 0
}
